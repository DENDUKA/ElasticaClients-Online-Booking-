@model ElasticaClients.Models.SubscriptionModel

@{
	ViewBag.Title = "Create";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/js/bootstrap-select.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/css/bootstrap-select.min.css" rel="stylesheet" />

<h2>Добавление абонемента</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="form-group">
			@Html.LabelFor(model => model.BranchId, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-9">
				@Html.DropDownListFor(model => model.BranchId, ElasticaClients.Logic.BranchB.ToSelectListItems(Model.BranchId), new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.AccountId, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-9">
				<div class="row-fluid">
					@Html.DropDownListFor(model => model.AccountId, ElasticaClients.Logic.AccountB.ToSelectListItems(), new { @class = "selectpicker", data_show_subtext = "true", data_live_search = "true" })
				</div>
				@Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.BuyDate, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-9">
				@Html.EditorFor(model => model.BuyDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.BuyDate, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.TrainingCount, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-9">
				@Html.EditorFor(model => model.TrainingCount, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.TrainingCount, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-9">
				@Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ByCash, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-9">
				@Html.EditorFor(model => model.ByCash, new { htmlAttributes = new { @class = "form-control col-md-1" } })
				@Html.ValidationMessageFor(model => model.ByCash, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.TiToThisSub, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-9">
				@Html.EditorFor(model => model.TiToThisSub, new { htmlAttributes = new { @class = "form-control col-md-1" } })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ActiveDays, htmlAttributes: new { @class = "control-label col-md-3" })
			<div class="col-md-9">
				@Html.EditorFor(model => model.ActiveDays, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ActiveDays, "", new { @class = "text-danger" })
			</div>
		</div>

		@*<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>*@

		<div class="btn-group" role="group">
			<button type="submit" value="Create" class="btn btn-success">Создать</button>
			<button type="button" class="btn btn-secondary" onclick="GoBack()">Назад</button>
		</div>
	</div>
}