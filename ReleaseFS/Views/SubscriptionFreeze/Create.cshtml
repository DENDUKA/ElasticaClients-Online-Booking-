@model ElasticaClients.Models.FreezeSubscriptionModel

@{
	ViewBag.Title = "Freeze";
}

<h2>Заморозка</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>FreezeSubscriptionModel</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	<div class="form-group">
		@Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
		</div>
	</div>

	@Html.HiddenFor(model => model.SubscriptionId)

	<div class="btn-group" role="group">
		<button type="submit" value="Create" class="btn btn-success">Заморозить</button>
		<button class="btn btn-secondary" onclick="GoBack(); return false;">Назад</button>
	</div>
</div>
}