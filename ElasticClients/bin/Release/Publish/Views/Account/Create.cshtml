@model ElasticaClients.Models.AccountModel

@{
	ViewBag.Title = "Добавление";
}

<h2>Добавление</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.RoleId, ElasticaClients.Models.RoleModel.GetSelectListItems(), new { id = "subs", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-10">
				@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="input-group">
					<div class="input-group-prepend">
						<span class="input-group-text">+7</span>
					</div>
					@Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
				</div>
				@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Instagram, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Instagram, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Instagram, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-10">
				@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="input-group">
					<div class="input-group-prepend">
						<span class="input-group-text">@@</span>
					</div>
					@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
				</div>
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="btn-group" role="group">
			<button type="submit" value="Create" class="btn btn-success">Создать</button>
			<button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "Account")'">Назад</button>
		</div>
	</div>
}

