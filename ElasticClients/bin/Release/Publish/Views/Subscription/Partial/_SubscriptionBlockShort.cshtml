@using ElasticaClients.DAL.Accessory;

@model ElasticaClients.Models.SubscriptionModel

<div class="subscription rounded">
	<div class="subscription-line">
		<span>Ученик: <b>@Html.ActionLink(@Model.Account.Name, "Details", "Account", new { @Id = Model.AccountId }, new { })</b></span>
	</div>

	<div class="subscription-line">
		<span>Номер абонемента: <b>@Html.ActionLink($"№{Model.Id.ToString()}", "Details", "Subscription", new { @Id = Model.Id }, new { })</b> на <b>@Model.TrainingCount</b> занятий</span>
	</div>

	@if (ElasticaClients.Logic.AccountB.IsCurrentUserAdmin())
	{
		<div class="subscription-line">
			<span>Куплен: <b>@Model.Branch.Name</b></span>
		</div>
	}

	<div class="subscription-line">
		<span>Статус: <b>@Model.StatusName</b></span>
	</div>

	<div class="subscription-line">
		<span>Дата покупки: <b>@Model.BuyDate.ToString("dd.MM.yyyy")</b></span>
	</div>

	@if (Model.StatusId == (int)SubscriptionStatus.Activated)
	{
		<div class="subscription-line">
			<span>Активен с <b>@(((DateTime)Model.ActivateDate).ToString("dd.MM.yyyy"))</b> по <b>@Model.DateEnd.ToString("dd.MM.yyyy")</b> (осталось<b> @Model.DaysLeft</b> дней)</span>
		</div>
	}

	@if (Model.StatusId == (int)SubscriptionStatus.Freezed)
	{
		<div class="subscription-line">
			<span>Активен с <b>@(((DateTime)Model.ActivateDate).ToString("dd.MM.yyyy"))</b></span>
		</div>

		<div class="subscription-line">
			<span>Заморожен с <b>@((Model.ActiveFreeze.Start).ToString("dd.MM.yyyy"))</b> по <b>@Model.ActiveFreeze.End.ToString("dd.MM.yyyy")</b> (осталось<b> @Model.FreezeDaysLeft </b> дней заморозки)</span>
		</div>

		<div class="subscription-line">
			<span>Окончание абонемента<b>@Model.DateEnd.ToString("dd.MM.yyyy")</b></span>
		</div>
	}
	<div class="subscription-line">
		<span>Осталось занятий: <b>@Model.TrainingsLeft</b></span>
	</div>

	@if (ElasticaClients.Logic.AccountB.IsCurrentUserAdmin())
	{
		<div class="btn-group" role="group">
			<button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Edit", "Subscription", new { Id = Model.Id })'">Редактировать</button>
			@if (Model.StatusId == (int)SubscriptionStatus.Activated)
			{
				<button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Create", "SubscriptionFreeze", new { SubscriptionId = Model.Id })'">Заморозка</button>
			}
			@if (Model.StatusId == (int)SubscriptionStatus.NotActivated)
			{
				<button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Activate", "Subscription", new { Id = Model.Id })'">Активация</button>
			}
			@if (Model.StatusId == (int)SubscriptionStatus.Freezed && ElasticaClients.Logic.AccountB.IsCurrentUserAdmin())
			{
				using (Html.BeginForm("UnFreeze", "SubscriptionFreeze", new { SubscriptionId = Model.Id }))
				{
					<button type="submit" class="btn btn-info">Разморозить</button>
				}
			}
			@if (ElasticaClients.Logic.AccountB.IsCurrentUserOwner())
			{
				using (Html.BeginForm("Delete", "Subscription", new { Id = Model.Id }, FormMethod.Post, new { @class = "inline", onsubmit = "return confirm('Удалить " + @Model.Id + "?');" }))
				{
					<button type="submit" value="Delete" class="btn btn-danger" onsubmit="return confirm('Удалить?')">Удалить</button>
				}
			}
		</div>
	}
</div>