@model ElasticaClients.Models.TrainingModel
@{
	/**/

	ViewBag.Title = "Details";
}

@{
	bool isAdminTrainer = ElasticaClients.Logic.AccountB.IsCurrentUserAdminTrainer();
	bool isAdmin = ElasticaClients.Logic.AccountB.IsCurrentUserAdmin();
}

<h2>Тренировка</h2>

<div>
	<hr />
	<dl class="dl-horizontal">
		<dt>
			@Html.DisplayNameFor(model => model.Gym.Branch.Name)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Gym.Branch.Name)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Name)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Name)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.StartTime)
		</dt>

		<dd>
			@($" {ElasticaClients.Models.ModelHelper.GetTimeFormat(Model.StartTime)} Продолжительность: {Model.Duration.ToString(@"hh\:mm")}")
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.Seats)
		</dt>

		<dd>
			@Model.SeatsFree / @Model.Seats
		</dd>

		<dt>
			Зал
		</dt>

		<dd>
			@Html.ActionLink(Model.Gym.Name, "Index", "Training", new { gymid = Model.GymId }, new { })
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.StatusId)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.StatusName)
		</dd>

		<dt>
			@Html.DisplayNameFor(model => model.TrainerId)
		</dt>

		<dd>
			@Html.ActionLink(Model.Trainer.Name, "Details", "Account", new { id = Model.Trainer.Id }, new { })
		</dd>
		@if (isAdmin)
		{
			<dt>
				Зарплата
			</dt>

			<dd>
				@Model.TrainerPay
			</dd>
		}
	</dl>
</div>
@if (isAdminTrainer)
{
	<h4>Записи :</h4>

	<table class="table">
		<tr>
			<th>Имя</th>
			<th>Статус</th>
		</tr>

		@foreach (var item in Model.TrainingItems)
		{
			<tr>
				<td>
					@Html.ActionLink(item.Account.Name, "Details", "Account", new { id = item.Account.Id }, new { })

					@if (isAdminTrainer)
					{
						@(item.Razovoe ? $"(Стоимость: {item.RazovoeCost})" : "")<b class="text-warning">@(item.IsTrial ? "Пробное занятие" : "")</b>
					}				
				
					@Html.Partial("~/Views/Training/_ServisesBlock.cshtml", item.ServisesList)		
					<div><b>Скидка: @item.Discount %</b></div>
				</td>
				<td>
					<div class="btn-group btn-group-toggle radiobuttonStatus" data-toggle="buttons" id="@item.Id">
						<label class="btn btn-secondary tistatus-ok" status="@((int)ElasticaClients.DAL.Accessory.TrainingItemStatus.yes)">
							<input type="radio" autocomplete="off" @(item.StatusId == (int)ElasticaClients.DAL.Accessory.TrainingItemStatus.yes ? "checked" : "")>
							<i class="bi bi-check-circle"></i>
						</label>

						<label class="btn btn-secondary tistatus-un" status="@((int)ElasticaClients.DAL.Accessory.TrainingItemStatus.unKnown)">
							<input type="radio" autocomplete="off" @(item.StatusId == (int)ElasticaClients.DAL.Accessory.TrainingItemStatus.unKnown ? "checked" : "")>
							<i class="bi bi-question-circle"></i>
						</label>

						<label class="btn btn-secondary tistatus-no" status="@((int)ElasticaClients.DAL.Accessory.TrainingItemStatus.no)">
							<input type="radio" autocomplete="off" @(item.StatusId == (int)ElasticaClients.DAL.Accessory.TrainingItemStatus.no ? "checked" : "")>
							<i class="bi bi-x-circle"></i>
						</label>

						<label class="btn btn-secondary tistatus" status="@((int)ElasticaClients.DAL.Accessory.TrainingItemStatus.canceledByAdmin)">
							<input type="radio" autocomplete="off" @(item.StatusId == (int)ElasticaClients.DAL.Accessory.TrainingItemStatus.canceledByAdmin ? "checked" : "")>
							<i class="bi bi-person-x"></i>
						</label>
					</div>

					@if (item.Razovoe)
					{
						<div>
							<div class="btn-group btn-group-toggle radiobuttonPayStatus" data-toggle="buttons" id="@item.Id">
								<label class="btn btn-secondary tistatus-ok" status="@((int)ElasticaClients.DAL.Accessory.TrainingItemPayStatus.yes)">
									<input type="radio" autocomplete="off" @(item.StatusPayId == (int)ElasticaClients.DAL.Accessory.TrainingItemPayStatus.yes ? "checked" : "")>
									<i class="bi bi-credit-card"></i>
								</label>

								<label class="btn btn-secondary tistatus-un" status="@((int)ElasticaClients.DAL.Accessory.TrainingItemPayStatus.no)">
									<input type="radio" autocomplete="off" @(item.StatusPayId == (int)ElasticaClients.DAL.Accessory.TrainingItemPayStatus.no ? "checked" : "")>
									<i class="bi bi-question-circle"></i>
								</label>

								<label class="btn btn-secondary tistatus-cash" status="@((int)ElasticaClients.DAL.Accessory.TrainingItemPayStatus.cash)">
									<input type="radio" autocomplete="off" @(item.StatusPayId == (int)ElasticaClients.DAL.Accessory.TrainingItemPayStatus.cash ? "checked" : "")>
									<i class="bi bi-cash-coin"></i>
								</label>
							</div>
						</div>
					}					

					@using (Html.BeginForm("Delete", "TrainingItem", new { id = item.Id }, FormMethod.Post, new { onsubmit = "return confirm('Удалить?');" }))
					{
						@Html.AntiForgeryToken()

						<button class="btn btn-danger" type="submit" autocomplete="off"><i class="bi bi-trash">Удалить</i></button>
					}
				</td>
			</tr>
		}
	</table>
}

<div class="btn-group" role="group" aria-label="Basic example">

	@if (Model.StatusId == (int)ElasticaClients.DAL.Accessory.TrainingStatus.Active)
	{
		if (ElasticaClients.Logic.AccountB.IsCurrentUserAdminTrainer())
		{
			<button class="btn btn-primary" onclick="location.href='@Url.Action("Create", "TrainingItem", new { trainingid = Model.Id })'"><i class="bi bi-plus-circle mr-1"></i> Записать клиента</button>
		}
	}

	@if (ElasticaClients.Logic.AccountB.IsCurrentUserAdmin())
	{
		if (Model.StatusId == (int)ElasticaClients.DAL.Accessory.TrainingStatus.Active)
		{
			<button class="btn btn-info" onclick="location.href='@Url.Action("Edit", new { id = Model.Id })'"><i class="bi bi-pencil-square"></i> Редактировать</button>

			using (Html.BeginForm("Cancel", "Training", new { id = Model.Id }, FormMethod.Post, new { onsubmit = "return confirm('Отменить ?');" }))
			{
				@Html.AntiForgeryToken()

				<button class="btn btn-danger" type="submit" onsubmit="return confirm('Отменить?')"><i class="bi bi-trash"></i>Отменить</button>
			}
		}
		else
		{
			using (Html.BeginForm("Restore", "Training", new { id = Model.Id }, FormMethod.Post, new { onsubmit = "return confirm('Восстановить ?');" }))
			{
				@Html.AntiForgeryToken()

				<button class="btn btn-primary" type="submit" onsubmit="return confirm('Восстановить?')">Восстановить</button>
			}
		}

		using (Html.BeginForm("Reacalculate", "Training", new { id = Model.Id }, FormMethod.Post))
		{
			<button type="submit" class="btn btn-primary">Пересчитать</button>
		}
	}

	@if (ElasticaClients.Logic.AccountB.IsCurrentUserClient() && Model.StatusId == (int)ElasticaClients.DAL.Accessory.TrainingStatus.Active)
	{
		<button class="btn btn-primary" onclick="location.href='@Url.Action("SignUp", "TrainingItem", new { trainingid = Model.Id })'"><i class="bi bi-plus-circle mr-1"></i> Записаться на тренировку</button>
	}

	<button class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "Training", new { gymid = Model.GymId })'">Назад</button>
</div>

<script>
	$(document).ready(function () {
		$('.radiobuttonStatus').change(function () {
			var elem = $(this);
			var id = elem.attr('id');
			var active = elem.children('.active');
			var statusId = active.attr('status');

			console.log(id);
			console.log(active);
			console.log(statusId);

			SeverChangeStatus(id, statusId);
		});

		function SeverChangeStatus(id, statusId) {
			$.ajax({
				type: 'Post',
				url: '@Url.Action("ChangeStatus")',
				contentType: "application/json; charset=utf-8",
				data: JSON.stringify({ tiid: id, statusid: statusId }),
				dataType: "json",
			});
		};


		$('.radiobuttonPayStatus').change(function () {
			var elem = $(this);
			var id = elem.attr('id');
			var active = elem.children('.active');
			var statusId = active.attr('status');

			console.log(id);
			console.log(active);
			console.log(statusId);

			SeverChangePayStatus(id, statusId);
		});

		function SeverChangePayStatus(id, statusId) {
			$.ajax({
				type: 'Post',
				url: '@Url.Action("ChangePayStatus")',
				contentType: "application/json; charset=utf-8",
				data: JSON.stringify({ tiid: id, statusid: statusId }),
				dataType: "json",
			});
		};
	});
</script>
