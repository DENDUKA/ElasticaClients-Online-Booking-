@using ElasticaClients.DAL.Accessory;
@model ElasticaClients.Models.TrainingModel

@{
	/**/

	/**/

	ViewBag.Title = "Create";
}

<h2>Добавить тренировку для @ViewData["GymName"]</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.StartDay, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.StartDay, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.StartDay, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
		</div>
	</div>

	@Html.HiddenFor(model => model.Duration)
	@Html.HiddenFor(model => model.Seats)

	<div class="form-group">
		@Html.LabelFor(model => model.TrainerId, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownListFor(model => model.TrainerId, ElasticaClients.Models.AccountModel.TrainersToSelectListItems(), new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.TrainerId, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.GymId, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownListFor(model => model.GymId, ElasticaClients.Logic.GymB.ToSelectListItems((int)ViewData["GymId"]), new { @class = "form-control", @disabled = "true" })
			@Html.ValidationMessageFor(model => model.GymId, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="btn-group" role="group">
		<button type="submit" value="Create" class="btn btn-success">Сохранить</button>
		<button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "Training", new { GymId = ViewData["GymId"]  })'">Назад</button>
	</div>
</div>
}