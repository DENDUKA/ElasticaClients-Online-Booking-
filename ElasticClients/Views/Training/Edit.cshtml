@using ElasticaClients.DAL.Accessory;

@model ElasticaClients.Models.TrainingModel

@{
	ViewBag.Title = "Edit";
}

<h2>Редактирование</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)
		@Html.HiddenFor(model => model.GymId)
		@Html.HiddenFor(model => model.StatusId)
		@Html.HiddenFor(model => model.Seats)

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.StartDay, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.StartDay, "{0:yyyy-MM-dd}", htmlAttributes: new { @type = "date", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.StartDay, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.StartTime, "{0:HH:mm}", htmlAttributes: new { @type = "time", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.TrainerId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.TrainerId, ElasticaClients.Models.AccountModel.TrainersToSelectListItems(Model.TrainerId), new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.TrainerId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.GymId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.GymId, ElasticaClients.Logic.GymB.ToSelectListItems(Model.GymId), new { @class = "form-control", @disabled = "true" })
				@Html.ValidationMessageFor(model => model.GymId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="btn-group" role="group">
			<button type="submit" value="Create" class="btn btn-success">Сохранить</button>
			<button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Details", "Training", new { id = Model.Id  })'">Назад</button>
		</div>
	</div>
}