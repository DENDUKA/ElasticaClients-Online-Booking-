@model IEnumerable<ElasticaClients.Models.AccountModel>

@{
	ViewBag.Title = "Index";
}

@if (ElasticaClients.Logic.AccountB.IsCurrentUserAdmin())
{
	<button class="btn btn-primary" onclick="location.href='@Url.Action("Create", "Account")'"><i class="bi bi-plus-circle mr-1"></i> Добавить новый</button>
}

<div class="col-md-7" style="display:inline-block;">
	@Html.Label("Фильтр:", htmlAttributes: new { @class = "control-label col-md-2" })
	<div style="display:inline-block">
		<input id="filter" class="form-control text-box single-line" data-val="true" type="text" value="">
	</div>
</div>

<table class="table sortable" id="accounts">
	<tr>
		<th class="colHeaderLink sortable headerrow-summary">
			@Html.DisplayNameFor(model => model.Name)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Instagram)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Phone)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Email)
		</th>
		<th>
			Роль :
		</th>
		<th></th>
	</tr>

	@foreach (var item in Model)
	{
		<tr class="table-row">
			<td>
				@Html.ActionLink(item.Name, "Details", new { id = item.Id })
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Instagram)
			</td>
			<td>
				+7<!---->@Html.DisplayFor(modelItem => item.Phone)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Email)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Role.Name)
			</td>
			<td>
				<a href="~/Account/Edit/@item.Id">
					<button class="btn btn-default" type="button">
						<img src="~/Content/img/edit.png" />
					</button>
				</a>
				<a>
					@using (Html.BeginForm("Delete", "Account", new { id = item.Id }, FormMethod.Post, new { @class = "inline", onsubmit = "return confirm('Удалить " + @item.Name + "?');" }))
					{
						@Html.AntiForgeryToken()
						<button type="submit" class="btn btn-default" onsubmit="return confirm('Удалить?')">
							<img src="~/Content/img/empty-trash.png" />
						</button>
					}
				</a>
			</td>
		</tr>
	}
</table>



<script>
	var table;
	var trs;

	$(document).ready(function () {
		table = $("#accounts");
		trs = table.find("tr.table-row");
	});

	$('#filter').on('input', function (e) {
		var filter = $(this).val().toLowerCase();
		hideAllTable();
		trs.find(':icontains(' + filter + ')').parent().show();
	});

	function hideAllTable() {
		trs.hide();
	}

	jQuery.expr[':'].icontains = function (a, i, m) {
		return jQuery(a).text().toLowerCase()
			.indexOf(m[3].toLowerCase()) >= 0;
	};
</script>